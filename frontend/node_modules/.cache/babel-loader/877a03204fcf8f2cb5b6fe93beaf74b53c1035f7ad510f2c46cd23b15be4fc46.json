{"ast":null,"code":"var _jsxFileName = \"C:\\\\DoodleVision AI\\\\DoodleVision-Drawing-Predictor-AI\\\\frontend\\\\src\\\\DrawingCanvas.js\",\n  _s = $RefreshSig$();\nimport React, { useRef, useEffect } from 'react';\nimport './DrawingCanvas.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction DrawingCanvas({\n  onSubmit,\n  theme\n}) {\n  _s();\n  const canvasRef = useRef(null);\n  const CANVAS_SIZE = 280;\n\n  // Fill white on load\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    const ctx = canvas.getContext('2d');\n    ctx.fillStyle = 'white';\n    ctx.fillRect(0, 0, CANVAS_SIZE, CANVAS_SIZE);\n  }, []);\n  const clearCanvas = () => {\n    const ctx = canvasRef.current.getContext('2d');\n    ctx.fillStyle = 'white';\n    ctx.fillRect(0, 0, CANVAS_SIZE, CANVAS_SIZE);\n  };\n  const submitCanvas = () => {\n    const dataUrl = canvasRef.current.toDataURL('image/png');\n    onSubmit(dataUrl);\n  };\n  const draw = e => {\n    const canvas = canvasRef.current;\n    const ctx = canvas.getContext('2d');\n    if (e.buttons !== 1) return;\n    ctx.fillStyle = 'black';\n    ctx.beginPath();\n    ctx.arc(e.nativeEvent.offsetX, e.nativeEvent.offsetY, 7, 0, 2 * Math.PI);\n    ctx.fill();\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `canvas-wrapper ${theme}`,\n    children: [/*#__PURE__*/_jsxDEV(\"canvas\", {\n      ref: canvasRef,\n      onMouseMove: draw,\n      width: CANVAS_SIZE,\n      height: CANVAS_SIZE,\n      className: \"drawing-canvas\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"canvas-controls\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"canvas-btn predict-btn\",\n        onClick: submitCanvas,\n        children: \"\\uD83D\\uDD2E Predict\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"canvas-btn clear-btn\",\n        onClick: clearCanvas,\n        children: \"\\uD83E\\uDDFC Clear\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n}\n_s(DrawingCanvas, \"UJgi7ynoup7eqypjnwyX/s32POg=\");\n_c = DrawingCanvas;\nexport default DrawingCanvas;\nvar _c;\n$RefreshReg$(_c, \"DrawingCanvas\");","map":{"version":3,"names":["React","useRef","useEffect","jsxDEV","_jsxDEV","DrawingCanvas","onSubmit","theme","_s","canvasRef","CANVAS_SIZE","canvas","current","ctx","getContext","fillStyle","fillRect","clearCanvas","submitCanvas","dataUrl","toDataURL","draw","e","buttons","beginPath","arc","nativeEvent","offsetX","offsetY","Math","PI","fill","className","children","ref","onMouseMove","width","height","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["C:/DoodleVision AI/DoodleVision-Drawing-Predictor-AI/frontend/src/DrawingCanvas.js"],"sourcesContent":["import React, { useRef, useEffect } from 'react';\r\nimport './DrawingCanvas.css';\r\n\r\nfunction DrawingCanvas({ onSubmit, theme }) {\r\n  const canvasRef = useRef(null);\r\n  const CANVAS_SIZE = 280;\r\n\r\n  // Fill white on load\r\n  useEffect(() => {\r\n    const canvas = canvasRef.current;\r\n    const ctx = canvas.getContext('2d');\r\n    ctx.fillStyle = 'white';\r\n    ctx.fillRect(0, 0, CANVAS_SIZE, CANVAS_SIZE);\r\n  }, []);\r\n\r\n  const clearCanvas = () => {\r\n    const ctx = canvasRef.current.getContext('2d');\r\n    ctx.fillStyle = 'white';\r\n    ctx.fillRect(0, 0, CANVAS_SIZE, CANVAS_SIZE);\r\n  };\r\n\r\n  const submitCanvas = () => {\r\n    const dataUrl = canvasRef.current.toDataURL('image/png');\r\n    onSubmit(dataUrl);\r\n  };\r\n\r\n  const draw = (e) => {\r\n    const canvas = canvasRef.current;\r\n    const ctx = canvas.getContext('2d');\r\n    if (e.buttons !== 1) return;\r\n\r\n    ctx.fillStyle = 'black';\r\n    ctx.beginPath();\r\n    ctx.arc(e.nativeEvent.offsetX, e.nativeEvent.offsetY, 7, 0, 2 * Math.PI);\r\n    ctx.fill();\r\n  };\r\n\r\n  return (\r\n    <div className={`canvas-wrapper ${theme}`}>\r\n      <canvas\r\n        ref={canvasRef}\r\n        onMouseMove={draw}\r\n        width={CANVAS_SIZE}\r\n        height={CANVAS_SIZE}\r\n        className=\"drawing-canvas\"\r\n      ></canvas>\r\n\r\n      <div className=\"canvas-controls\">\r\n        <button className=\"canvas-btn predict-btn\" onClick={submitCanvas}>\r\n          ðŸ”® Predict\r\n        </button>\r\n        <button className=\"canvas-btn clear-btn\" onClick={clearCanvas}>\r\n          ðŸ§¼ Clear\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default DrawingCanvas;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}